version: "3.9"
   
services:
  # Postgres - database
  db:
    image: postgres:14.1
    restart: always
    healthcheck:
      test: /usr/bin/pg_isready -d vcdb -U vcdbadmin
      interval: 5s
      timeout: 10s
      retries: 6
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=vcdb
      - POSTGRES_USER=vcdbadmin
      - POSTGRES_PASSWORD=vcdbpassword
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - backend

  # Adminer - database managemer
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy

  # RabbitMQ - queue
  broker:
    image: rabbitmq
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitadmin
      - RABBITMQ_DEFAULT_PASS=rabbitpassword
    ports:
      - 5672:5672
    networks:
      - backend

  nginx:
    image: nginx
    volumes:
      - ../nginx.conf:/etc/nginx/nginx.conf
      - mediadata:/api/media/
    ports:
      - 80:80
    networks:
      - backend

  # Django - backend
  web: &video_converter
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: --migrate python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    environment: &video_converter_env
      - DB_NAME=vcdb
      - DB_USER=vcdbadmin
      - DB_PASSWORD=vcdbpassword
      - DB_HOST=db
      - DB_PORT=5432
      - BROKER_HOST=broker
      - BROKER_PORT=5672
      - BROKER_USER=rabbitadmin
      - BROKER_PASS=rabbitpassword
      - TIME_ZONE=Asia/Tehran
      - MEDIA_URL=http://localhost/videos/
    restart: always
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_healthy
    volumes:
      - ../:/api/
      - mediadata:/api/media/
    networks:
      - backend

  # Celery worker
  worker:
    <<: *video_converter
    # command: supervisord -c supervisord.conf
    command: supervisord -c supervisord.conf
    restart: always
    ports: []

volumes:
  dbdata:
  mediadata:

networks:
  backend: